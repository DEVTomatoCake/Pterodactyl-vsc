{
	"name": "pterodactyl-vsc",
	"displayName": "Pterodactyl file system",
	"description": "Open a Pterodactyl server folder as a remote workspace.",
	"version": "1.1.0",
	"publisher": "tomatocake",
	"license": "MIT",
	"main": "./out/src/extension",
	"browser": "./out/src/extension",
	"extensionKind": [
		"workspace"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/DEVTomatoCake/Pterodactyl-vsc.git"
	},
	"engines": {
		"vscode": "^1.91.0"
	},
	"categories": [
		"Other"
	],
	"qna": false,
	"activationEvents": [
		"onFileSystem:pterodactyl"
	],
	"keywords": [
		"pterodactyl",
		"ptero",
		"file-system-provider",
		"remote-repository",
		"remote-filesystem"
	],
	"contributes": {
		"commands": [
			{
				"command": "pterodactyl-vsc.init",
				"title": "Setup/Connect to server",
				"shortTitle": "Setup",
				"category": "Pterodactyl"
			},
			{
				"command": "pterodactyl-vsc.reset",
				"title": "Reset workspace config",
				"shortTitle": "Reset",
				"category": "Pterodactyl"
			},
			{
				"command": "pterodactyl-vsc.refresh",
				"title": "Refresh server files",
				"shortTitle": "Refresh",
				"category": "Pterodactyl"
			}
		],
		"menus": {
			"commandPalette": [
				{
					"command": "pterodactyl-vsc.init",
					"when": "workbenchState != workspace"
				},
				{
					"command": "pterodactyl-vsc.reset",
					"when": "workbenchState == workspace"
				},
				{
					"command": "pterodactyl-vsc.refresh",
					"when": "workbenchState == workspace"
				}
			]
		},
		"viewsWelcome": [
			{
				"view": "explorer",
				"contents": "Open a Pterodactyl server folder as a remote workspace.\n[Add Pterodactyl panel](command:pterodactyl-vsc.init)",
				"when": "workspaceFolderCount == 0"
			}
		],
		"configuration": {
			"title": "Pterodactyl file system",
			"properties": {
				"pterodactyl-vsc.panelUrl": {
					"type": "string",
					"default": "",
					"description": "Pterodactyl panel URL to connect to.",
					"format": "uri"
				},
				"pterodactyl-vsc.apiKey": {
					"type": "string",
					"default": "",
					"description": "Client API key for the Pterodactyl panel set above, found in Account Settings -> API Credentials.",
					"minLength": 48,
					"maxLength": 48,
					"pattern": "^ptlc_[a-zA-Z0-9]{43}$",
					"patternErrorMessage": "Invalid client API key."
				},
				"pterodactyl-vsc.serverId": {
					"type": "string",
					"default": "",
					"description": "Server ID of the server you want to edit the files of, found in the URL.",
					"minLength": 8,
					"maxLength": 8,
					"pattern": "^[a-z0-9]{8}$",
					"patternErrorMessage": "Invalid short server ID."
				},
				"pterodactyl-vsc.proxyUrl": {
					"type": "string",
					"default": "https://pterodactyl-vsc.tomatocake.workers.dev/?url=",
					"description": "CORS proxy to use. Leave empty to disable.",
					"pattern": "^(https?://.+)?$"
				}
			}
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"lint": "eslint .",
		"watch": "tsc -watch -p ./",
		"pack": "vsce pack -o ./out/pterodactyl-vsc.vsix -t web",
		"pack-files": "vsce ls",
		"--comment-publish": "https://dev.azure.com/tomatocake/_usersSettings/tokens",
		"publish": "vsce publish",
		"--comment-publish-openvsx": "https://open-vsx.org/user-settings/tokens",
		"publish-openvsx": "npx ovsx publish ./out/pterodactyl-vsc.vsix",
		"sideload": "npx serve --cors -l 5000 --ssl-cert $HOME/certs/localhost.pem --ssl-key $HOME/certs/localhost-key.pem",
		"sideload-win": "npx serve --cors -l 5000 --ssl-cert %userprofile%\\certs\\localhost.pem --ssl-key %userprofile%\\certs\\localhost-key.pem"
	},
	"devDependencies": {
		"@stylistic/eslint-plugin-js": "^2.8.0",
		"@types/node": "^22.5.1",
		"@types/vscode": "^1.92.0",
		"@typescript-eslint/parser": "^8.7.0",
		"@vscode/vsce": "^3.0.0",
		"eslint": "^9.11.1",
		"eslint-plugin-sonarjs": "^1.0.4",
		"eslint-plugin-unicorn": "^55.0.0",
		"typescript": "^5.5.4"
	}
}
